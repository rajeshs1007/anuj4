const { DataTypes } = require("sequelize");

module.exports = model;

function model(sequelize) {
  const attributes = {
    // Id: {
    //   type: DataTypes.INTEGER,
    //   allowNull: true,
    //   autoIncrement: true,
    //   primaryKey: true,
    // },
   
    priority : { type: DataTypes.STRING(255), allowNull: true },
    barcode : { type: DataTypes.STRING(255), allowNull: true },
    brcd: { type: DataTypes.STRING(255), allowNull: true },
    ucc: { type: DataTypes.STRING(255), allowNull: true },
    kslucc: { type: DataTypes.STRING(255), allowNull: true },
    clname: { type: DataTypes.STRING(255), allowNull: true },
    ks_dpid_a: { type: DataTypes.STRING(255), allowNull: true },
    ksdp_boid: { type: DataTypes.STRING(255), allowNull: true },
    dp_ratecd: { type: DataTypes.STRING(255), allowNull: true },
    catg: { type: DataTypes.STRING(255), allowNull: true },
    panno: { type: DataTypes.STRING(255), allowNull: true },
    neoid: { type: DataTypes.STRING(255), allowNull: true },
    odinid: { type: DataTypes.STRING(255), allowNull: true },
    bossid: { type: DataTypes.STRING(255), allowNull: true },
    locationid: { type: DataTypes.STRING(255), allowNull: true },
    es_locnid: { type: DataTypes.STRING(255), allowNull: true },
    eckyc_no: { type: DataTypes.STRING(255), allowNull: true },
    k_platform: { type: DataTypes.STRING(255), allowNull: true },
    ks_clusrid: { type: DataTypes.STRING(255), allowNull: true },
    ks_ralfno: { type: DataTypes.STRING(255), allowNull: true },
    ks_ralncm: { type: DataTypes.STRING(255), allowNull: true },
    ks_dpid_b: { type: DataTypes.STRING(255), allowNull: true },
    ks_dpboid: { type: DataTypes.STRING(255), allowNull: true },
    esdp_map: { type: DataTypes.STRING(255), allowNull: true },
    es_dpboid: { type: DataTypes.STRING(255), allowNull: true },
    ks_nomn: { type: DataTypes.STRING(255), allowNull: true },
    ks_relwapc: { type: DataTypes.STRING(255), allowNull: true },
    es_nomn: { type: DataTypes.STRING(255), allowNull: true },
    es_relwapc: { type: DataTypes.STRING(255), allowNull: true },
    ks_clsts: { type: DataTypes.STRING(255), allowNull: true },
    es_clsts: { type: DataTypes.STRING(255), allowNull: true },
    ac_closed: { type: DataTypes.STRING(255), allowNull: true },
    ks_nsecm: { type: DataTypes.STRING(255), allowNull: true },
    es_nsecm: { type: DataTypes.STRING(255), allowNull: true },
    is_mtchncm: { type: DataTypes.STRING(255), allowNull: true },
    ks_bsecm: { type: DataTypes.STRING(255), allowNull: true },
    es_bsecm: { type: DataTypes.STRING(255), allowNull: true },
    is_mtchbcm: { type: DataTypes.STRING(255), allowNull: true },
    ks_nsefo: { type: DataTypes.STRING(255), allowNull: true },
    es_nsefo: { type: DataTypes.STRING(255), allowNull: true },
    is_mtchnfo: { type: DataTypes.STRING(255), allowNull: true },
    ks_nsecds: { type: DataTypes.STRING(255), allowNull: true },
    es_nsecds: { type: DataTypes.STRING(255), allowNull: true },
    is_mtchcds: { type: DataTypes.STRING(255), allowNull: true },
    ks_mcx: { type: DataTypes.STRING(255), allowNull: true },
    es_mcx: { type: DataTypes.STRING(255), allowNull: true },
    is_mtchmcx: { type: DataTypes.STRING(255), allowNull: true },
    ks_ncdex: { type: DataTypes.STRING(255), allowNull: true },
    es_ncdex: { type: DataTypes.STRING(255), allowNull: true },
    is_mtchncd: { type: DataTypes.STRING(255), allowNull: true },
    ks_emailid: { type: DataTypes.STRING(255), allowNull: true },
    es_email: { type: DataTypes.STRING(255), allowNull: true },
    is_mtch_em: { type: DataTypes.STRING(255), allowNull: true },
    ks_emrel: { type: DataTypes.STRING(255), allowNull: true },
    es_emrel: { type: DataTypes.STRING(255), allowNull: true },
    ks_mobile: { type: DataTypes.STRING(255), allowNull: true },
    es_mobile: { type: DataTypes.STRING(255), allowNull: true },
    is_mtch_mo: { type: DataTypes.STRING(255), allowNull: true },
    ks_mobrel: { type: DataTypes.STRING(255), allowNull: true },
    es_mobrel: { type: DataTypes.STRING(255), allowNull: true },
    es_netbkg: { type: DataTypes.FLOAT(), allowNull: true },
    ks_lstrdt: { type: DataTypes.STRING(255), allowNull: true },
    es_lstrdt: { type: DataTypes.STRING(255), allowNull: true },
    closer_trf: { type: DataTypes.STRING(255), allowNull: true },
es_mtfpos: { type: DataTypes.STRING(255), allowNull: true },
    es_opnpos: { type: DataTypes.STRING(255), allowNull: true },
    es_margin: { type: DataTypes.STRING(255), allowNull: true },
    es_ledbal: { type: DataTypes.STRING(255), allowNull: true },
    es_dpledg: { type: DataTypes.STRING(255), allowNull: true },
es_dphldg: { type: DataTypes.INTEGER(), allowNull: true },
    es_ccol: { type: DataTypes.STRING(255), allowNull: true },
    es_nccol: { type: DataTypes.STRING(255), allowNull: true },
    es_pledval: { type: DataTypes.STRING(255), allowNull: true },
    es_corpact: { type: DataTypes.STRING(255), allowNull: true },
    es_pfreco: { type: DataTypes.STRING(255), allowNull: true },
    cmbkgsts: { type: DataTypes.STRING(255), allowNull: true },
    fobkgsts: { type: DataTypes.STRING(255), allowNull: true },
    cobkgsts: { type: DataTypes.STRING(255), allowNull: true },
    cdsbkgsts: { type: DataTypes.STRING(255), allowNull: true },
    brname: { type: DataTypes.STRING(255), allowNull: true },

    // id: {type: DataTypes.INTEGER, allowNull: true , primaryKey: true,}
  };
  /* by default it pluralize the model, so it will tread it as 'People' and query will be like
     select * from People  (if you have pre existing table Person, then it won't get records)
  */
  const options = {
    freezeTableName: true,
    // don't add the timestamp attributes (updatedAt, createdAt)
    timestamps: false,
  };
  return sequelize.define("details", attributes, options);
}
